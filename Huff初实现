#include <bits/stdc++.h>
using namespace std;

typedef struct {
    int weight;
    int parent,lchild,rchild;
}HTNode,*HuffmanTree;


void Select(HuffmanTree &HT,int s,int *s1,int *s2){
    int min1 = 9999, min2=9999,temp;
    for (int i = 1; i < s; ++i)
    {
        temp = HT[i].weight;
        if (temp<min2){
            if (temp>min1){
                min2 = HT[i].weight;
                *s2 = i;
            } else{
                min1 = HT[i].weight;
                *s1 = i;
            }

        }

    }
}

void CreatHuffmanTree(HuffmanTree &HT,int n){
    if (n <= 1) return;
    int m;
    m = 2*n-1;
    HT = new HTNode [m+1];
    for (int i = 1; i <=m ; ++i)
    {
        HT[i].parent = 0;HT[i].lchild = 0;HT[i].rchild = 0;
    }
    for (int i = 0; i <= n; ++i)
    {
        cin>>HT[i].weight;
    }
    for (int i = n+1; i <= m ; ++i)
    {
        int s1,s2;
        Select(HT,i-1,&s1,&s2);
        HT[i].weight = HT[s1].weight + HT[s2].weight;
        HT[i].lchild = s1;HT[i].rchild = s2;
    }
}
